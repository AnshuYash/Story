import time
import turtle
from turtle import Turtle, Screen
from ball import Ball
from bat_1 import Bat_1
from bat_2 import Bat_2
from boundary import Boundary
from middle_line import Middle_Line
from scoreboard import Scoreboard

timmy = Turtle()
timmy.color("RED")
timmy.penup()
timmy.hideturtle()
timmy.goto(0, -100)
screen = Screen()
screen.setup(800, 600)
screen.bgcolor("Black")
screen.tracer(0)
bound = Boundary()
mid = Middle_Line()
paddle_1 = Bat_1()
paddle_2 = Bat_2()
score = Scoreboard()
screen.update()
round_num = 1

def reset_game(ball):
    global round_num
    round_num = round_num + 1
    ball.set()
    if ball.level > 3:
        score.game_end()
        choice = screen.textinput(title="Enter your choice!", prompt="Type y to play another game or n to quit")
        if choice == "y":
            screen.clear()
            screen.bgcolor("Black")
            start_game()
        else:

            screen.bgcolor("Black")
            timmy.goto(0, -50)
            timmy.color("red")
            timmy.write("Please click on screen to exit", align="center", font=("Brush Script MT", 40, "normal"))
            screen.exitonclick()
    else:
        ball.ball_reset()
        return


def start_game():
    screen.clear()
    screen.setup(800, 600)
    screen.bgcolor("black")
    screen.tracer(0)
    Boundary()
    Middle_Line()
    paddle_1 = Bat_1()
    paddle_2 = Bat_2()
    score = Scoreboard()
    ball = Ball()
    screen.update()


    timmy.clear()
    screen.listen()
    screen.onkey(key="w", fun=paddle_1.go_up)
    screen.onkey(key="s", fun=paddle_1.go_down)
    screen.onkey(key="Up", fun=paddle_2.go_up)
    screen.onkey(key="Down", fun=paddle_2.go_down)

    game_on = True
    while game_on:
        time.sleep(0.001)
        screen.update()
        ball.move()
        if ball.ycor() > 290 or ball.ycor() < -290:
            ball.bounce_y()
        if ball.xcor() > 615 and ball.distance(paddle_2) < 40:
            ball.bounce_x()
            score.r_score()
        if ball.xcor() < -615 and ball.distance(paddle_1) < 40:
            ball.bounce_x()
            score.l_score()
        # game end
        if ball.xcor() > 640 and ball.distance(paddle_2) > 50:
            reset_game(ball)
            timmy.write(f"Round :{round_num-1} ends and \n Round:: {round_num} begins ", align="center", font=("Castellar", 30, "bold"))
            # time.sleep(3)
            turtle.delay(3000)
            timmy.clear()

        if ball.xcor() < -640 and ball.distance(paddle_1) > 50:
            reset_game(ball)
            timmy.write(f"Round :{round_num-1} ends and \n Round:: {round_num} begins ", align="center", font=("Castellar", 30, "bold"))
            timmy.clear()


def menu():
    screen.listen()
    timmy.penup()
    timmy.hideturtle()
    timmy.write("Press Space key to star the game!", align="center", font=("Castellar", 30, "bold"))
    screen.onkey(key="space", fun=start_game)


menu()
screen.exitonclick()
